//
// ─── DOCUMENT READY ─────────────────────────────────────────────────────────────
//

$('document').ready(function () {
	$('.flex-prev').hide();
	$('.flex-next').hide();

	$('#fos_comment_thread').on('fos_comment_submitting_form', function (event, data) {
		$('#fos_comment_thread .fos_comment_submit input').attr('disabled', true);
		$('#fos_comment_thread .fos_comment_submit input').val('Posting...');
	});

	if(!localStorage.getItem('mgw_user') && window['isUser']) {
		localStorage.setItem('mgw_user', window['username']);
	}

	if(!window['isUser']) {
		// Continue reading
		if (localStorage.getItem('mgorc') && localStorage.getItem('mgorch')) {
			$('#nav_continue_reading').show();
			$('.w3_continue_reading').show();
		} else {
			$('#nav_continue_reading').hide();
			$('.w3_continue_reading').hide();
		}
	}

	if(typeof reader == "undefined" || !reader) {
		//Bookmark
		showBookmark();
		getUpdateBookMark();
		getUpdateSubject();
		if(window['isUser']) {
			//Checking get new notify message
			if(!localStorage.getItem('mgw_sync_comment') || parseInt(localStorage.getItem('mgw_sync_comment')) + 3600 < Math.floor(Date.now() / 1000)) {
				localStorage.setItem('mgw_sync_comment', Math.floor(Date.now() / 1000));

				// check can set local storage
				if(localStorage.getItem('mgw_sync_comment')) {
					syncCommentUser();
				}
			}
			if(!localStorage.getItem('mgw_get_new_message') || parseInt(localStorage.getItem('mgw_get_new_message')) + 300 < Math.floor(Date.now() / 1000)) {
				localStorage.setItem('mgw_get_new_message', Math.floor(Date.now() / 1000));

				// check can set local storage
				if(localStorage.getItem('mgw_get_new_message') && !window.location.href.includes('/view_messages')) {
					getCountNewMessage();
				}
			}
			
		}

		//Checking get new notify message
		if(!localStorage.getItem('mgw_get_reply_comment') || parseInt(localStorage.getItem('mgw_get_reply_comment')) + 600 < Math.floor(Date.now() / 1000)) {
			localStorage.setItem('mgw_get_reply_comment', Math.floor(Date.now() / 1000));

			// check can set local storage
			if(localStorage.getItem('mgw_get_reply_comment')) {
				getReplyComments();
			}
		} else {
			showNotificationsNewMessage();
		}
	}
});

function getCountNewMessage() {
	$.getJSON(window['api_url'] + '/api/get_count_new_message?su_key=' + window.su, function (res) {
		localStorage.setItem('mgw_new_message', (res.data ? res.data.length : 0))
	})
}
function getReplyComments() {
	let comments = getStoreComments();
	if(comments.length > 0) {
		$.post(
			window['api_url'] + '/api/get_reply_message',
			{ 
				data: JSON.stringify(getStoreComments()),
				su_key: window['su'],
			}, 
			function(data, status, jqXHR) {
				if(status == 'success') {
					addNewReplyComments(data.data);
				}
			}, 
			"json"
		).always(function() {
			showNotificationsNewMessage();
		})
	}
}

function showNotificationsNewMessage() {
	let totalMessage = localStorage.getItem('mgw_new_message') ? parseInt(localStorage.getItem('mgw_new_message')) : 0;
	let newMessage = getNewReplyComment();
	totalMessage += newMessage.length;
	if(totalMessage > 0) {
		$('#notify-updated-message').show();
		$('#notify-updated-message span').html(totalMessage);
		
		$('#income-message-link').find('span').text(` You have new ${totalMessage} message(s)`);
		$('#income-message-link').show();
		$('#income-message').show();
	}
}

function addNewReplyComments(data) {
	let comments  = getNewReplyComment() || [];
	for(let replyComment of data){
		let added = false;
		for(comment of comments) {
			if(parseInt(comment.id) == parseInt(replyComment.id)) {
				added = true;
			}
		}
		if(added == false) {
			comments.unshift(replyComment);
		}
	}
	localStorage.setItem('mgw_new_reply_comments', JSON.stringify(comments))
}

function setNewReplyComments(comments) {
	localStorage.setItem('mgw_new_reply_comments', JSON.stringify(comments))
}

function getNewReplyComment() {
	let comments = [];
	if(localStorage.getItem('mgw_new_reply_comments')) {
		try {
			comments = JSON.parse(localStorage.getItem('mgw_new_reply_comments'));
		} catch(e) {
			console.log(e);
		}
	}

	return comments;
}

function syncCommentUser() {
	let now = Math.floor(Date.now() / 1000);
	$.getJSON(window['api_url'] + '/api/sync_comment?su_key=' + window.su, function (res) {
		if (res.data && res.data.length > 0) {
			let storedComments = getStoreComments();
			for(let comment of res.data.reverse()) {
				let found = false;
				for(let sComment of storedComments) {
					if(sComment[0] == comment.id) {
						found = true;
					}
				}
				if(found === false) {
					storeNewComment(comment.id, comment.count, now);
				}
			}
		}
	})
}

function storeNewComment(commentId, replyCount, date) {
	let comments = getStoreComments() || [];
	let now = Math.floor(Date.now() / 1000);
	if(comments.length > 100) {
		comments.splice(100, comments.length - 1);
	}
	if(!replyCount) {
		replyCount = 0;
	}
	if(!date) {
		date = now;
	}
	comments.unshift([commentId, replyCount, date]);
	localStorage.setItem('mgw_comments', JSON.stringify(comments));
}

function storeCommentCount(commentId, count) {
	let comments = getStoreComments();
	let now = Math.floor(Date.now() / 1000);
	for(let comment of comments) {
		if(comment[0] == commentId) {
			comment[1] = count;
			comment[2] = now;
		}
	}
	localStorage.setItem('mgw_comments', JSON.stringify(comments));
}

function getStoreComments() {
	let comments = [];
	if(localStorage.getItem('mgw_comments')) {
		try {
			comments = JSON.parse(localStorage.getItem('mgw_comments'));
		} catch(e) {
			console.log(e);
		}
	}

	return comments;
}

window.isMobile = function() {
	var check = false;
	(function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);
	return check;
};

//
// ─── COOKIE ─────────────────────────────────────────────────────────────────────
//

function getCookie(cname) {
	var name = cname + "=";
	var decodedCookie = decodeURIComponent(document.cookie);
	var ca = decodedCookie.split(';');
	for (var i = 0; i < ca.length; i++) {
		var c = ca[i];
		while (c.charAt(0) == ' ') {
			c = c.substring(1);
		}
		if (c.indexOf(name) == 0) {
			return c.substring(name.length, c.length);
		}
	}
	return "";
}
Number.prototype.AddZero = function (b, c) {
	var l = (String(b || 10).length - String(this).length) + 1;
	return l > 0 ? new Array(l).join(c || '0') + this : this;
}

function appendCookie(cname, value) {
	var today = new Date();
	var date = today.getFullYear() + '-' + (today.getMonth() + 1).AddZero() + '-' + today.getDate().AddZero() + ' ' + today.getHours().AddZero() + ':' + today.getMinutes().AddZero();
	document.cookie = `${cname}_${value}=${date};max-age=315360000;path=/`;
}

function popCookie(cname, value) {
	document.cookie = `${cname}_${value}= ; expires = Thu, 01 Jan 1970 00:00:00 GMT;path=/`;
}

function saveBookmark(id) {
	let selector = '.bookmark_' + id;
	$(selector).html('<i class="fa fa-spinner" aria-hidden="true"></i>');
	$.post(window.location.origin + '/saveBookmark', {
		comicId: id
	}).done(
		function (data, text, xhr) {
			if (xhr.status == 403) {
				alert('You have been logged out!!!');
				window.location = window.location;
			}
			if (xhr.status == 200) {
				$(selector).html('<i class="fa fa-bookmark" aria-hidden="true"></i>&nbsp;Bookmarked');
				$(selector).removeClass('btn-primary');
				$(selector).addClass('btn-danger');
				$(selector).addClass('bookmarked');
			}
		}
	);
}

function unbookmark(id) {
	let selector = '.bookmark_' + id;
	$(selector).html('<i class="fa fa-spinner" aria-hidden="true"></i>');
	$.post(window.location.origin + '/unbookmark', {
		comicId: id
	}).done(
		function (data, text, xhr) {
			if (xhr.status == 403) {
				alert('You have been logged out!!!');
				window.location = window.location;
			}
			if (xhr.status == 200) {
				$(selector).html('<i class="fa fa-bookmark" aria-hidden="true"></i>&nbsp;Bookmark');
				$(selector).addClass('btn-primary');
				$(selector).removeClass('btn-danger');
				$(selector).removeClass('bookmarked');
			}
		}
	);
}

/**
 * 
 * @param {int} id Id of Comic
 */
function removeBookmark(id) {
	if (window['mgowl_userBookmark']) {
		unbookmark(id);
	} else {
		popCookie('mgobookmark', id);
		let selector = '.bookmark_' + id;
		$(selector).html('<i class="fa fa-bookmark" aria-hidden="true"></i>&nbsp;Bookmark');
		$(selector).addClass('btn-primary');
		$(selector).removeClass('btn-danger');
		$(selector).removeClass('bookmarked');
	}
}

/**
 * 
 * @param {int} id Id of Comic
 */
function addBookmark(id) {
	if (window['mgowl_userBookmark']) {
		if (window['mgowl_userBookmark'].indexOf(id) == -1) {
			window['mgowl_userBookmark'].push(id);
		}
		saveBookmark(id);
	} else {
		appendCookie('mgobookmark', id);
		let selector = '.bookmark_' + id;
		$(selector).html('<i class="fa fa-bookmark" aria-hidden="true"></i>&nbsp;Bookmarked');
		$(selector).removeClass('btn-primary');
		$(selector).addClass('btn-danger');
		$(selector).addClass('bookmarked');
	}
}

function bookmark(e, id) {
	if ($(e.target).hasClass('bookmarked')) {
		removeBookmark(id);
	} else {
		addBookmark(id);
	}
	// showBookmark();
}

function checkBookmarkedManga(comicId) {
	let contained = false;
	for(let cookie of document.cookie.split(';') ){
		if(cookie.includes("mgobookmark_"+comicId+"=")) {
			contained = true;
		}
	}

	return contained;
}

function updateBookmark(comicId) {
	if (!window['mgowl_userBookmark']) {
		if(comicId) {
			if(checkBookmarkedManga(comicId)) {
				appendCookie('mgobookmark', comicId);
			}
		} else {
			$('.comicView').each(function (i, item) {
				if(checkBookmarkedManga($(item).attr('data-id').trim())) {
					appendCookie('mgobookmark', $(item).attr('data-id'));
				}
			});
		}
	} else {
		let arrComicId = [];
		if(comicId) {
			for(let i = 0; i < $('.comicView').length; i++) {
				let comicId = $($('.comicView')[i]).attr('data-id');
				if(parseInt(comicId) > 0) {
					arrComicId.push(comicId);
				}
			} 
		}else {
			arrComicId.push(comicId);
		}
		
		if(arrComicId.length > 0) {
			$.ajax({
				url: window.location.origin + '/updateBookMark',
				type: "post",
				data: { 'arrComicId' : arrComicId}
			});
		}
	}
}

function showBookmark() {
	$('.bookmark_btn').addClass('btn-primary');
	$('.bookmark_btn').removeClass('btn-danger');
	$('.bookmark_btn').removeClass('bookmarked');
	$('.bookmark_btn').html('<i class="fa fa-bookmark" aria-hidden="true"></i>&nbsp;Bookmark');
	if (window['mgowl_userBookmark']) {
		var arrBmark = window['mgowl_userBookmark'];
	} else {
		var decodedCookie = decodeURIComponent(document.cookie);
		var ca = decodedCookie.split(';');
		var arrBmark = [];
		for (let c of ca) {
			if (c.trim().indexOf('mgobookmark_') == 0) {
				arrBmark.push(c.replace('mgobookmark_', '').split('=')[0].trim());
			}
		}
	}

	arrBmark.forEach(function (comicId) {
		if (comicId) {
			let id = '.bookmark_' + comicId;
			$(id).html('<i class="fa fa-bookmark" aria-hidden="true"></i>&nbsp;Bookmarked');
			$(id).removeClass('btn-primary');
			$(id).addClass('btn-danger');
			$(id).addClass('bookmarked');
		}
	});

	if (arrBmark.length || window['mgowl_userBookmark']) {
		$('#nav_bookmark').show();
	} else {
		$('#nav_bookmark').hide();
	}
}

function getUpdateBookMark() {
	if(window.location.href.includes('updated_bookmark')) {
		return;
	}
	if($('.bookmark_badge').length) {
		// if(!localStorage.getItem('getUpdateBookMark') 
		// || !localStorage.getItem('UpdateBookMark')
		// || (Math.floor(Date.now() / 1000) - localStorage.getItem('getUpdateBookMark')) > 300 
		// || localStorage.getItem('UpdateBookMark') != 0
		// ) {
		// 	localStorage.setItem('getUpdateBookMark', Math.floor(Date.now() / 1000)) 
			$.getJSON(window.location.origin + '/getUpdateBookMark', function (jsonData) {
				if (jsonData.data > 0) {
					if(alertify) {
						if(window.isMobile()) {
							$('#notify-updated-bookmark').show();
						}
						$('#notify-updated-bookmark').css('opacity', 0);
						alertify.set('notifier','position', 'bottom-left').set('resizable',true);
						alertify.success(`<i class="fa fa-bookmark-o" ></i> New updated on ${jsonData.data} bookmarked manga <a class="btn btn-xs" target="_parent"  href="/updated_bookmark">View</a>`, 5, function() {
							$('#notify-updated-bookmark').css('opacity', 1);
						});
						$('#notify-updated-bookmark span').html(jsonData.data);
					}
					
					$('.bookmark_badge').text(jsonData.data);
					$('.bookmark_badge').show();
				}
				// localStorage.setItem('UpdateBookMark', jsonData.data)
			});
		// }
	}
}

function getUpdateSubject() {
	if(!localStorage.getItem('getUpdateSubject') || !localStorage.getItem('UpdateSubject')|| (Math.floor(Date.now() / 1000) - localStorage.getItem('getUpdateSubject')) > 600) {
		localStorage.setItem('getUpdateSubject', Math.floor(Date.now() / 1000))
		
		if($('.subject_badge').length) {
			$.getJSON(window.location.origin + '/getCountSubject', function (jsonData) {
				if (jsonData.data > 0) {
					$('.subject_badge').text(jsonData.data);
					$('.subject_badge').show();
					localStorage.setItem('UpdateSubject', jsonData.data);
				}
			});
		}
	} else {
		$('.subject_badge').text(localStorage.getItem('UpdateSubject'));
		$('.subject_badge').show();
		
	}
}

function loadingPreviewComic(comicId) {
	$('#comic_modal-title').text($('div.comicView[data-id="'+comicId+'"]').attr('data-title'));
	$('#comic_modal-preload').show();
	$('#comic_modal-thumbnail').html(``);
	$('#comic_modal-description').html(``);
	$('#comic_modal-data').html(``);
	$('#comic_modal-btn-read').attr('href', '');

	$.getJSON('https://img.mostraveller.com/live_search/ID' + comicId, function(data) {
		$('#comic_modal-preload').hide();
		let comic = data[0];
		$('#comic_modal-thumbnail').html(`<img src="${ comic.image }" style="max-width:100%;">`);
		$('#comic_modal-description').html(comic.description);

		var listGenres = ``;
		var arrLabel = ["danger", "default", "primary", "success", "info", "warning"];
		for(var i = 0; i < comic.genres.length; i++) {
			listGenres += ` <label class="label label-${(arrLabel[Math.floor(Math.random() * arrLabel.length)])}" style="line-height: 2;">${comic.genres[i][0]}</label>`
		}
		$('#comic_modal-data').html(`
			<ul class="list-group">
              <li class="list-group-item text-left">
                  ${listGenres}
              </li>
              <li class="list-group-item text-left">View : ${comic.viewed}</li>
              ${(comic.author?`<li class="list-group-item text-left">Author : ${ comic.author }</li>`:``)}
              ${(comic.malId?`<li class="list-group-item text-left">Rating : <font style="font-size:1.5em; font-weight:bold">${ comic.scored }</font><i style="font-size:0.7em"> / ${ comic.scoredBy } vote(s)</i></li>`:``)}
            </ul>
		`);
		$('#comic_modal-btn-read').attr('href', comic.url);
	});
}

function emojiInput(e) {
	$(e.target).closest('form').find('textarea').val($(e.target).closest('form').find('textarea').val() + $(e.target).text());
}
function voted(e) {
	$(e.target).closest('.fos_comment_comment_voting').find('button').hide();
	$(e.target).closest('.fos_comment_comment_voting').find('.fos_comment_comment_label_voted').show();
	
	if($(e.target).closest('.fos_comment_comment_vote').hasClass('fos_comment_comment_vote_down')) {
		if(!localStorage.getItem('mgw_cvd') || parseInt(localStorage.getItem('mgw_cvd')) + 300 < Math.floor(Date.now() / 1000)) {
			localStorage.setItem('mgw_cvd', Math.floor(Date.now() / 1000));
		} else {
			e.stopPropagation();
			e.preventDefault();
			return false;
		
		}
	}
}

function checkCommentLink(elId) {
	if($(elId)) {
		for(let z = 0; z < $(elId).length; z++) {
			let el = $($(elId)[z]);
			let comment = el.text().replace(/fuck/ig, 'f**k').replace(/snet.moteam.xyz/ig, 'mangaowl.net').replace(/com.moteam.xyz/ig, 'mangaowl.com');
			if(comment.indexOf('//mangaowl.net/') > 0 || comment.indexOf('//mangaowl.com/') > 0 ||  comment.indexOf('//mangaowls.com/') > 0) {
				arrWords = comment.split(" ");
				for(let i = 0; i < arrWords.length; i++) {
					let word = arrWords[i];
					if(word.indexOf('//mangaowl.net/') > 0 || word.indexOf('//mangaowl.com/') > 0 ||  word.indexOf('//mangaowls.com/') > 0) {
						let uri = ``;
						if(word.indexOf('//mangaowl.net/') > 0) {
							uri = word.split('//mangaowl.net/')[1]
						}
						if(word.indexOf('//mangaowl.com/') > 0) {
							uri = word.split('//mangaowl.com/')[1]
						}
						if(word.indexOf('//mangaowls.com/') > 0) {
							uri = word.split('//mangaowls.com/')[1]
						}
						arrWords[i] = `<a href="/${uri}" >${word}</a>`;
					}
				}
				el.html(arrWords.join(' '));
			} else {
				el.html(comment);
			}
		}
	}
}

function showMore(event, selector) {
	$(event.target).hide();
	$(selector).css('max-height', 'unset');
	$(selector).css('overflow', 'unset');
}

function interceptPost(el) {
	if((!window['isUser'] || !window['su']) && $(el).closest('#fos_comment_thread').attr('data-thread').includes('subject-')) {
		$('#require-login').modal();
		return;
	}
	let mainForm = $(el).closest('.fos_comment_comment_new_form');
	let parent = mainForm.attr('data-parent');
	let value = mainForm.find('#fos_comment_comment_body').val();
	if(mainForm.find('#fos_comment_comment_body').val().trim() != '' && !$('.fos_comment_submit .btn-submit').attr('disabled'))  {
		$(el).attr('disabled', true);
		mainForm.find('#fos_comment_comment_body').val('');
		mainForm.find('.loader-xs').css('display', 'inline-block');
		$.ajax({ 
			url: mainForm.attr('action'), 
			type : "post", 
			data : {
				'fos_comment_comment[body]' : value, 
				// 'fos_comment_comment[_token]': mainForm.find('#fos_comment_comment__token').val()
			}, complete: function(xmlHttp) {
				// xmlHttp is a XMLHttpRquest object
				if(!parent || parent.trim() == '') {
					mainForm.closest('#fos_comment_thread').find('.fos_comment_comment_form_holder').after(xmlHttp.responseText);
				} else {
					$('#fos_comment_'+parent).find('.fos_comment_comment_replies').first().prepend(xmlHttp.responseText);
				}
				mainForm.find('.loader-xs').css('display', 'none');
				$(el).attr('disabled', false);
				mainForm.find('.fos_comment_comment_reply_cancel').click();
				
				let newComment = $.parseHTML(xmlHttp.responseText.trim());
				let newCommentId = $(newComment).attr('id').trim().replace('fos_comment_', '');
				storeNewComment(String(newCommentId));
			},
			crossDomain: true,
				error: function(jqXHR, textStatus, errorThrown) {
					
				}
		})
	}
}

let showNoComment = 8;
function showMoreComment() {
	showNoComment += 8;
	$('#comment_style').html(`#fos_comment_thread .fos_comment_comment_depth_0:nth-child(n+${showNoComment}) {
		display:none;
	}`);
	if($('#fos_comment_thread .fos_comment_comment_depth_0').length <= showNoComment) {
		$('.show-more').hide();
	}
}